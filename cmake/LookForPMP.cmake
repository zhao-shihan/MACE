message(STATUS "Looking for pmp")

set(MACE_PMP_MINIMUM_REQUIRED 3.0.0)

if(NOT MACE_BUILTIN_PMP)
    find_package(pmp ${MACE_PMP_MINIMUM_REQUIRED})
    if(NOT pmp_FOUND)
        set(MACE_BUILTIN_PMP ON)
        message(NOTICE "***Notice: pmp not found (minimum required is ${MACE_PMP_MINIMUM_REQUIRED}). For the time turning on MACE_BUILTIN_PMP")
    endif()
endif()

if(MACE_BUILTIN_PMP)
    message(STATUS "MACESW will use built-in pmp")
    # check built-in version
    if(MACE_BUILTIN_PMP_VERSION VERSION_LESS MACE_PMP_MINIMUM_REQUIRED)
        message(NOTICE "***Notice: Provided MACE_BUILTIN_PMP_VERSION is ${MACE_BUILTIN_PMP_VERSION}, which is less than the requirement (${MACE_PMP_MINIMUM_REQUIRED}). Changing to ${MACE_PMP_MINIMUM_REQUIRED}")
        set(MACE_BUILTIN_PMP_VERSION ${MACE_PMP_MINIMUM_REQUIRED})
    endif()
    # set download dest and URL
    set(MACE_BUILTIN_PMP_SRC_DIR "${MACE_PROJECT_3RDPARTY_DIR}/pmp-library-${MACE_BUILTIN_PMP_VERSION}")
    set(MACE_BUILTIN_PMP_URL "https://github.com/pmp-library/pmp-library/archive/refs/tags/${MACE_BUILTIN_PMP_VERSION}.tar.gz")
    # reuse or download
    include(FetchContent)
    if(EXISTS "${MACE_BUILTIN_PMP_SRC_DIR}/CMakeLists.txt")
        FetchContent_Declare(pmp SOURCE_DIR "${MACE_BUILTIN_PMP_SRC_DIR}")
        message(STATUS "Reusing pmp source ${MACE_BUILTIN_PMP_SRC_DIR}")
    else()
        FetchContent_Declare(pmp SOURCE_DIR "${MACE_BUILTIN_PMP_SRC_DIR}"
                                 URL "${MACE_BUILTIN_PMP_URL}")
        message(STATUS "pmp will be downloaded from ${MACE_BUILTIN_PMP_URL} to ${MACE_BUILTIN_PMP_SRC_DIR}")
    endif()
    # set options
    set(PMP_BUILD_EXAMPLES OFF CACHE INTERNAL "")
    set(PMP_BUILD_TESTS OFF CACHE INTERNAL "")
    set(PMP_BUILD_DOCS OFF CACHE INTERNAL "")
    set(PMP_BUILD_VIS OFF CACHE INTERNAL "")
    set(PMP_INSTALL ON CACHE INTERNAL "")
    set(PMP_STRICT_COMPILATION OFF CACHE INTERNAL "")
    set(PMP_SCALAR_TYPE 64 CACHE INTERNAL "")
    set(PMP_INDEX_TYPE 64 CACHE INTERNAL "")
    # configure it
    message(STATUS "Downloading (if required) and configuring pmp (version: ${MACE_BUILTIN_PMP_VERSION})")
    FetchContent_MakeAvailable(pmp)
    message(STATUS "Downloading (if required) and configuring pmp (version: ${MACE_BUILTIN_PMP_VERSION}) - done")
    # check download
    if(NOT EXISTS "${MACE_BUILTIN_PMP_SRC_DIR}/CMakeLists.txt")
        file(REMOVE_RECURSE "${CMAKE_BINARY_DIR}/_deps/pmp-build")
        file(REMOVE_RECURSE "${CMAKE_BINARY_DIR}/_deps/pmp-subbuild")
        message(FATAL_ERROR "It seems that the download of pmp has failed. You can try running cmake again, or manually download pmp from ${MACE_BUILTIN_PMP_URL} and extract it to ${MACE_PROJECT_3RDPARTY_DIR} (and keep the directory structure). If the error persists, you can try cleaning the build tree and restarting the build.")
    endif()
endif()

if(NOT MACE_BUILTIN_PMP)
    message(STATUS "Looking for pmp - found (version: ${pmp_VERSION})")
    set(PMP_INCLUDE_DIRS ${pmp_DIR}/include)
else()
    message(STATUS "Looking for pmp - built-in (version: ${MACE_BUILTIN_PMP_VERSION})")
    set(PMP_INCLUDE_DIRS ${MACE_BUILTIN_PMP_SRC_DIR}/src)
endif()
